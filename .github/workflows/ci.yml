# Workflow name that appears in GitHub Actions UI
name: Java CI Pipeline

# Define when this workflow will run
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Define the jobs to be executed
jobs:
  build-and-test:
    # Specify the runner environment
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Check out the repository code
      # This step is required to access your repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java Development Kit
      # Configure JDK 17 with Temurin distribution
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven packages
      # This improves workflow execution time by reusing previously downloaded dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Step 4: Build and Test
      # Clean the project, compile the source code, and run tests
      - name: Build and Test
        run: mvn -B clean verify

      # Step 5: Package the application
      # Create the JAR file
      - name: Package
        run: mvn -B package

      # Step 6: Upload Artifacts
      # Store the compiled application and test reports as workflow artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: |
            target/*.jar
            target/surefire-reports
